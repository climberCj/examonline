<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Student" >
    <id column="sysid" property="sysid" jdbcType="VARCHAR" />
    <result column="studentId" property="studentid" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="studentName" property="studentname" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="INTEGER" />
    <result column="sclass" property="sclass" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    sysid, studentId, password, studentName, result, sclass
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from student
    where sysid = #{sysid,jdbcType=VARCHAR}
  </select>
  <select id="selectByStudentId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from student
    where studentId = #{studentId,jdbcType=VARCHAR}
  </select>
  <select id="findByStudentname" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from student
    where studentName = #{studentName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from student
    where sysid = #{sysid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Student" >

    <selectKey keyProperty="sysid" resultType="String" order="BEFORE">
      select  replace(uuid(),'-','')   from dual
    </selectKey>
    insert into student (sysid, studentId, password, 
      studentName, result, sclass
      )
    values (#{sysid,jdbcType=VARCHAR}, #{studentid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{studentname,jdbcType=VARCHAR}, #{result,jdbcType=INTEGER}, #{sclass,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sysid != null" >
        sysid,
      </if>
      <if test="studentid != null" >
        studentId,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="studentname != null" >
        studentName,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="sclass != null" >
        sclass,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sysid != null" >
        #{sysid,jdbcType=VARCHAR},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentname != null" >
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=INTEGER},
      </if>
      <if test="sclass != null" >
        #{sclass,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Student" >
    update student
    <set >
      <if test="studentid != null" >
        studentId = #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentname != null" >
        studentName = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=INTEGER},
      </if>
      <if test="sclass != null" >
        sclass = #{sclass,jdbcType=VARCHAR},
      </if>
    </set>
    where sysid = #{sysid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Student" >
    update student
    set studentId = #{studentid,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      studentName = #{studentname,jdbcType=VARCHAR},
      result = #{result,jdbcType=INTEGER},
      sclass = #{sclass,jdbcType=VARCHAR}
    where sysid = #{sysid,jdbcType=VARCHAR}
  </update>

  <select id="findAll" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List"/>
      from student
  </select>
  <select id="findByPage" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from student
  </select>
</mapper>